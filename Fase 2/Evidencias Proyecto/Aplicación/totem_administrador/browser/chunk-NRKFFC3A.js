import{a as f,c as g,k as v,n as c}from"./chunk-X2DCTIRQ.js";import{F as i,T as m,Y as u,ba as n,o as r,p as l,t as p}from"./chunk-INDI3DVQ.js";var h=class a{constructor(e,t){this.http=e;this.router=t}apiUrl=c.apiUrl;apiKey=c.apiKey;renewAccessToken(){let e=localStorage.getItem("accountToken"),o=JSON.parse(localStorage.getItem("userDetails")||"{}").id_user;if(!e||!o)return r(!1);let S=new f({"x-api-key":this.apiKey}),d={accountToken:e,user_id:o};return this.http.post(`${this.apiUrl}administrator/auth/renew-access-token`,d,{headers:S}).pipe(p(s=>s.success?(localStorage.setItem("accessToken",s.accessToken),localStorage.setItem("lastAccessTime",new Date().getTime().toString()),!0):(this.clearSession(),!1)),i(s=>(this.clearSession(),this.router.navigate(["/login"]),r(!1))))}handleTokenError(e,t){return e.status===401||e.status===403?this.renewAccessToken().pipe(m(o=>o?t():(this.clearSession(),r(null))),i(()=>(this.clearSession(),this.router.navigate(["/login"]),r(null)))):l(()=>new Error("Error no relacionado con token."))}clearSession(){localStorage.removeItem("accessToken"),localStorage.removeItem("accountToken"),localStorage.removeItem("userDetails"),localStorage.removeItem("isLoggedIn"),localStorage.removeItem("lastAccessTime")}static \u0275fac=function(t){return new(t||a)(n(g),n(v))};static \u0275prov=u({token:a,factory:a.\u0275fac,providedIn:"root"})};export{h as a};
